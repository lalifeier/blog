"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[159],{9613:(e,n,r)=>{r.d(n,{Zo:()=>c,kt:()=>v});var t=r(9496);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=t.createContext({}),p=function(e){var n=t.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},c=function(e){var n=p(e.components);return t.createElement(s.Provider,{value:n},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(r),d=o,v=m["".concat(s,".").concat(d)]||m[d]||u[d]||a;return r?t.createElement(v,i(i({ref:n},c),{},{components:r})):t.createElement(v,i({ref:n},c))}));function v(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[m]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=r[p];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4044:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var t=r(5882),o=(r(9496),r(9613));const a={},i="Java",l={unversionedId:"devpos/development-environment/java",id:"devpos/development-environment/java",title:"Java",description:"",source:"@site/docs/devpos/development-environment/java.md",sourceDirName:"devpos/development-environment",slug:"/devpos/development-environment/java",permalink:"/blog/devpos/development-environment/java",draft:!1,editUrl:"https://github.com/lalifeier/blog/tree/main/packages/create-docusaurus/templates/shared/docs/devpos/development-environment/java.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Go",permalink:"/blog/devpos/development-environment/go"},next:{title:"Node",permalink:"/blog/devpos/development-environment/node"}},s={},p=[],c={toc:p};function m(e){let{components:n,...r}=e;return(0,o.kt)("wrapper",(0,t.Z)({},c,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"java"},"Java"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# sdkman\ncurl -s \"https://get.sdkman.io\" | bash\n\ncat >> ~/.zshrc <<EOF\n#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!\nexport SDKMAN_DIR=\"$HOME/.sdkman\"\n[[ -s \"$HOME/.sdkman/bin/sdkman-init.sh\" ]] && source \"$HOME/.sdkman/bin/sdkman-init.sh\"\nEOF\n\nsdk list java\nsdk install java 8.0.265-open\nsdk default java 8.0.265-open\n\n# sdk install java 11.0.12-open\n\n# maven\n# https://developer.aliyun.com/mvn/guide\nsdk install maven\n# ~/.m2/settings.xml\nvim ~/.sdkman/candidates/maven/3.8.6/conf/settings.xml\n#\u5728<mirrors></mirrors>\u6807\u7b7e\u4e2d\u6dfb\u52a0 mirror \u5b50\u8282\u70b9\n# <mirror>\n#   <id>nexus-aliyun</id>\n#   <mirrorOf>*</mirrorOf>\n#   <name>Nexus aliyun</name>\n#   <url>http://maven.aliyun.com/nexus/content/groups/public</url>\n# </mirror>\n<mirror>\n  <id>aliyunmaven</id>\n  <mirrorOf>*</mirrorOf>\n  <name>\u963f\u91cc\u4e91\u516c\u5171\u4ed3\u5e93</name>\n  <url>https://maven.aliyun.com/repository/public</url>\n</mirror>\n\n# gradle\nsdk install gradle\n# ~/.gradle/init.gradle\nvim ~/.sdkman/candidates/gradle/7.5.1/init.d/init.gradle\nallprojects{\n    repositories {\n        def ALIYUN_CENTRAL_URL = 'https://maven.aliyun.com/repository/central'\n        def ALIYUN_JCENTER_URL = 'https://maven.aliyun.com/repository/public'\n        def ALIYUN_GOOGLE_URL = 'https://maven.aliyun.com/repository/google'\n        def ALIYUN_GRADLE_PLUGIN_URL = 'https://maven.aliyun.com/repository/gradle-plugin'\n        def ALIYUN_SPRING_URL = 'https://maven.aliyun.com/repository/spring'\n        def ALIYUN_SPRING_PLUGIN_URL = 'https://maven.aliyun.com/repository/spring-plugin'\n        def ALIYUN_GRAILS_CORE_URL = 'https://maven.aliyun.com/repository/grails-core'\n        def ALIYUN_APACHE_SNAPSHOT_URL = 'https://maven.aliyun.com/repository/apache-snapshots'\n\n        all { ArtifactRepository repo ->\n            if(repo instanceof MavenArtifactRepository){\n                def url = repo.url.toString()\n                if (url.startsWith('https://repo1.maven.org/maven2')) {\n                    project.logger.lifecycle \"Repository ${repo.url} replaced by $ALIYUN_CENTRAL_URL.\"\n                    remove repo\n                }\n                if (url.startsWith('https://jcenter.bintray.com/')) {\n                    project.logger.lifecycle \"Repository ${repo.url} replaced by $ALIYUN_JCENTER_URL.\"\n                    remove repo\n                }\n            }\n        }\n        maven {\n            url ALIYUN_CENTRAL_URL\n            url ALIYUN_JCENTER_URL\n            url ALIYUN_GOOGLE_URL\n            url ALIYUN_GRADLE_PLUGIN_URL\n            url ALIYUN_SPRING_URL\n            url ALIYUN_SPRING_PLUGIN_URL\n            url ALIYUN_GRAILS_CORE_URL\n            url ALIYUN_APACHE_SNAPSHOT_URL\n        }\n    }\n}\n\n# build.gradle\nallprojects {\n  repositories {\n    maven {\n      url 'https://maven.aliyun.com/repository/public/'\n    }\n    mavenLocal()\n    mavenCentral()\n  }\n}\n\n\nsdk install tomcat\n# sdk install springboot\n\n# sdk flush candidates\n# sdk env init\n\n# jenv\n# git clone https://github.com/jenv/jenv.git ~/.jenv\n# cat >> ~/.zshrc <<EOF\n# export PATH=\"$HOME/.jenv/bin:$PATH\"\n# eval \"$(jenv init -)\"\n# EOF\n")))}m.isMDXComponent=!0}}]);